{"version":3,"sources":["img/r2d2.svg","img/bb8.svg","components/logo.jsx","components/header/navigation/index.jsx","components/header/index.jsx","services/index.js","actions/films.js","components/film-card/index.jsx","components/swiper/index.jsx","components/films-swiper/index.jsx","actions/characters.js","selectors/index.js","components/character-card/index.jsx","components/characters-swiper/index.jsx","components/home/index.jsx","components/films/sorter.jsx","components/films/index.jsx","actions/character.js","actions/film.js","components/film/characterLink.jsx","components/film/index.jsx","components/characters/pagination.jsx","components/characters/index.jsx","components/character/index.jsx","components/app/index.jsx","reducers/films.js","reducers/film.js","reducers/characters.js","reducers/character.js","reducers/index.js","index.jsx","configureStore.js"],"names":["module","exports","Logo","version","xmlns","x","y","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","d","Navigation","className","to","activeClassName","exact","Header","axios","create","baseURL","fetchFilmsIfNeeded","dispatch","getState","films","data","length","type","httpService","get","then","response","payload","results","catch","error","requestFilmsError","FilmCard","props","path","url","split","filter","v","pop","title","episode_id","director","release_date","SLIDER_PARAMS","slidesPerView","spaceBetween","slidesPerGroup","loop","Swiper","swiperRef","React","createRef","goNext","current","swiper","slideNext","goPrev","slidePrev","children","this","onClick","size","ref","Component","compareNumberOfEpisode","film1","film2","FilmsSwiper","componentDidMount","sort","render","loading","filmCards","map","film","key","mapDispatchToProps","fetchFilmsIfNeededIfNeededAction","connect","state","fetchCharactersIfNeeded","pageNum","page","characters","dataByPage","shouldFetchCharacters","requestCharacters","pathNumber","count","requestCharactersSuccess","requestCharactersError","fetchCharacters","setCharactersPage","selectCharactersPageData","selectCharacterDataById","id","dataById","CharacterCard","name","CharactersSwiper","character","setCharactersPageAction","fetchCharactersIfNeededAction","currentPage","Home","src","r2d2","alt","bb8","Sorter","e","target","value","onChange","selectHandler","compareReleaseDate","Date","Films","sorterHandler","sortBy","setState","sortData","sortedData","noshade","fetchCharacterIfNeeded","characterId","shouldFetchCharacter","requestCharacter","requestCharacterSuccess","requestCharacterError","fetchCharacter","fetchFilm","filmId","requestFilm","characterIds","requestFilmSuccess","requestFilmCharacters","characterRequests","Promise","all","forEach","action","requestFilmCharactersSuccess","requestFilmCharactersError","fetchFilmCharacters","requestFilmError","fetchFilmIfNeeded","shouldFetchFilm","Film","match","params","charactersError","loadingCharacters","producer","renderCharacterError","font","opening_crawl","renderError","renderFilm","selectFilmDataById","Pagination","btnHandler","numb","onPagination","pageCount","disabled","Characters","search","location","pageFromQuery","queryString","parse","parseInt","setCurrentPageInHistory","history","pathname","push","renderPagination","Character","renderCharacter","gender","birth_year","App","component","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.45d1ef00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/r2d2.8f11ca7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bb8.53a7ce44.svg\";","import React from 'react';\r\n\r\nconst Logo = () => (\r\n    <svg\r\n        version='1.1'\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        x='0px'\r\n        y='0px'\r\n        viewBox='0 0 600 270'\r\n    >\r\n        <g fill='none' stroke='#FFE81F' strokeWidth='12' strokeMiterlimit='10'>\r\n            <path d='M262,6.8v35.5h-37.4v84.1h-39.2V42.3h-48.6c-14.1-0.4-16.2,3.5-6.3,11.8C148.3,69.7,157,85,156.7,99.8\r\n                c-0.3,14.8-9.1,23.7-26.2,26.5H26.6V90.8h65.6c15.6,0.4,17.5-3.9,5.9-13.1C79,60,70.9,43.8,73.8,29s11.9-22.2,27-22.2H262z'\r\n            />\r\n            <path d='M408.3,126.2V6.9h77.6c9.6,0.9,17.5,3.4,23.6,7.6c6.2,4.2,10.7,9.8,13.5,16.9c2.2,10.6,2.3,18.7,0.3,24.5\r\n                c-2,5.7-5.5,10.5-10.4,14.4c-5,3.9-12.1,6.9-21.3,9.1l4.5,5.7c3,3.8,8.2,5.7,15.5,5.7h52.7v35.5h-56.7c-12.3,0-24.8-6.6-37.4-19.7\r\n                l-18.9-19.7v39.4H408.3z M451.4,36.6v22h30.1c1.6,0,3.3-0.6,5.2-1.8c1.9-1.2,2.9-4.2,3-9c-0.3-4.6-1.4-7.6-3.3-9\r\n                c-2-1.5-3.6-2.2-4.9-2.2H451.4z'\r\n            />\r\n            <path d='M111.4,215l-12.7,51H59.6L32,181.5H7v-35.8h55.1l16.5,52l14.3-52h36l16.7,52l11.2-52h38.7L165.8,266h-39.1\r\n                L111.4,215z'\r\n            />\r\n            <path d='M556.2,181.5H594v-35.8h-74.1c-15.3,0-24.4,7.4-27.3,22.3c-2.9,14.9,5.3,31.2,24.7,49c11.7,9.2,9.7,13.6-6,13.2\r\n                h-67.9c-7.4,0-12.7-1.9-15.7-5.8l-4.5-5.7c9.3-2.2,16.5-5.3,21.5-9.2c5-3.9,8.5-8.7,10.5-14.5c2-5.8,1.9-14-0.3-24.7\r\n                c-2.9-7.1-7.4-12.8-13.7-17c-6.2-4.2-14.2-6.8-23.8-7.7h-78.3V266h43.5v-39.7l19.1,19.9c12.7,13.2,25.3,19.8,37.7,19.8h110.5\r\n                c17.3-2.9,26.2-11.8,26.5-26.6c0.3-14.9-8.5-30.2-26.5-46C539.8,185,541.9,181.1,556.2,181.5z M418.1,196c-1.9,1.2-3.6,1.8-5.2,1.8\r\n                h-30.3v-22.2h30.2c1.3,0,3,0.7,4.9,2.2c2,1.5,3.1,4.5,3.4,9.1C421,191.8,420,194.9,418.1,196z'\r\n            />\r\n            <path d='M281.8,146.7h-59.3l-11.7,35.5h0L183.3,266h42.8l7.5-21.5h35.4l7.5,21.5h45.1L281.8,146.7z M236.1,221\r\n                l17.1-47.2L269,221H236.1z'\r\n            />\r\n            <path d='M349.1,6.8h-59.3l-11.7,35.5h0L250.7,126h42.8l7.5-21.5h35.4l7.5,21.5H389L349.1,6.8z M303.4,81.1l17.1-47.2\r\n                l15.8,47.2H303.4z'\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => (\r\n    <nav className='navigation wrapper'>\r\n        <ul className='menu'>\r\n            <li className='menu__item'>\r\n                <NavLink to='/' className='link' activeClassName='link--active' exact>Home</NavLink>\r\n            </li>\r\n            <li className='menu__item'>\r\n                <NavLink to='/films' className='link' activeClassName='link--active'>Films</NavLink>\r\n            </li>\r\n            <li className='menu__item'>\r\n                <NavLink to='/characters' className='link' activeClassName='link--active'>Characters</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from 'components/logo';\r\nimport Navigation from './navigation';\r\nimport './header.css';\r\n\r\nconst Header = () => (\r\n    <header className='header'>\r\n        <div className='logo'>\r\n            <Link to='/'>\r\n                <Logo />\r\n            </Link>\r\n        </div>\r\n        <Navigation />\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://swapi.dev/api/',\r\n});\r\n","import httpService from 'services';\r\n\r\nexport const REQUEST_FILMS = 'REQUEST_FILMS';\r\nexport const REQUEST_FILMS_SUCCESS = 'REQUEST_FILMS_SUCCESS';\r\nexport const REQUEST_FILMS_ERROR = 'REQUEST_FILMS_ERROR';\r\n\r\nfunction requestFilms() {\r\n    return {\r\n        type: REQUEST_FILMS,\r\n    };\r\n}\r\n\r\nfunction requestFilmsSuccess(data) {\r\n    return {\r\n        type: REQUEST_FILMS_SUCCESS,\r\n        payload: data.results,\r\n    };\r\n}\r\n\r\nfunction requestFilmsError(error) {\r\n    return {\r\n        type: REQUEST_FILMS_ERROR,\r\n        payload: error,\r\n    };\r\n}\r\n\r\nfunction fetchFilms() {\r\n    return (dispatch) => {\r\n        dispatch(requestFilms());\r\n        return httpService.get('films/')\r\n            .then((response) => dispatch(requestFilmsSuccess(response.data)))\r\n            .catch((error) => dispatch(requestFilmsError(error)));\r\n    };\r\n}\r\n\r\nfunction shouldFetchFilms(state) {\r\n    const { length } = state.films.data;\r\n    return !length;\r\n}\r\n\r\nexport function fetchFilmsIfNeeded() {\r\n    return (dispatch, getState) => {\r\n        if (shouldFetchFilms(getState())) {\r\n            return dispatch(fetchFilms());\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst getHrefId = (href) => href.split('/').filter((v) => v).pop();\r\n\r\nconst FilmCard = (props) => {\r\n    const { data } = props;\r\n    const path = `/films/${getHrefId(data.url)}`;\r\n    return (\r\n        <Link to={path} className='card film-card'>\r\n            <div className='card-body'>\r\n                <h4 className='card-title'>{data.title}</h4>\r\n                <p>\r\n                    Episode:\r\n                    {data.episode_id}\r\n                </p>\r\n                <p>\r\n                    Director:\r\n                    {data.director}\r\n                </p>\r\n                <p><small className='text-muted'>{data.release_date}</small></p>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default FilmCard;\r\n","import React, { Component } from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'react-feather';\r\nimport ReactSwiper from 'react-id-swiper';\r\nimport 'swiper/swiper-bundle.css';\r\nimport './swiper.scss';\r\n\r\nconst SLIDER_PARAMS = {\r\n    slidesPerView: 3,\r\n    spaceBetween: 30,\r\n    slidesPerGroup: 1,\r\n    loop: true,\r\n};\r\n\r\nclass Swiper extends Component {\r\n    swiperRef = React.createRef()\r\n\r\n    goNext = () => {\r\n        if (this.swiperRef.current) {\r\n            this.swiperRef.current.swiper.slideNext();\r\n        }\r\n    }\r\n\r\n    goPrev = () => {\r\n        if (this.swiperRef.current) {\r\n            this.swiperRef.current.swiper.slidePrev();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        return (\r\n            <div className='swiper'>\r\n                <button\r\n                    className='swiper-button prev'\r\n                    type='button'\r\n                    onClick={this.goPrev}\r\n                >\r\n                    <ChevronLeft size={34} />\r\n                </button>\r\n                <ReactSwiper\r\n                    {...SLIDER_PARAMS}\r\n                    ref={this.swiperRef}\r\n                >\r\n                    {children}\r\n                </ReactSwiper>\r\n                <button\r\n                    className='swiper-button next'\r\n                    type='button'\r\n                    onClick={this.goNext}\r\n                >\r\n                    <ChevronRight size={34} />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Swiper;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'react-feather';\r\nimport { fetchFilmsIfNeeded as fetchFilmsIfNeededIfNeededAction } from 'actions/films';\r\nimport FilmCard from 'components/film-card';\r\nimport Swiper from 'components/swiper';\r\n\r\nconst compareNumberOfEpisode = (film1, film2) => film1.episode_id - film2.episode_id;\r\n\r\nclass FilmsSwiper extends Component {\r\n    componentDidMount = () => {\r\n        const { fetchFilmsIfNeeded } = this.props;\r\n        fetchFilmsIfNeeded();\r\n    }\r\n\r\n    sort = (data) => data.sort(compareNumberOfEpisode);\r\n\r\n    render = () => {\r\n        const { data, loading, error } = this.props;\r\n        const sortedData = this.sort(data);\r\n        const filmCards = sortedData.map((film) => (\r\n            <div key={film.episode_id}>\r\n                <FilmCard data={film} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div className='films-swiper'>\r\n                <div className='title'>Films</div>\r\n                {error && <p>Failed to load film data</p>}\r\n                <div>\r\n                    {\r\n                        loading\r\n                            ? <Loader className='icon-loading' size={30} />\r\n                            : <Swiper>{filmCards}</Swiper>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ...state.films,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchFilmsIfNeeded: fetchFilmsIfNeededIfNeededAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmsSwiper);\r\n","import httpService from 'services';\r\n\r\nexport const SET_CHRACTERS_PAGE = 'SET_CHRACTERS_PAGE';\r\nexport const REQUEST_CHARACTERS = 'REQUEST_CHARACTERS';\r\nexport const REQUEST_CHARACTERS_SUCCESS = 'REQUEST_CHARACTERS_SUCCESS';\r\nexport const REQUEST_CHARACTERS_ERROR = 'REQUEST_CHARACTERS_ERROR';\r\n\r\nfunction requestCharacters(pageNum) {\r\n    return {\r\n        type: REQUEST_CHARACTERS,\r\n        payload: {\r\n            pageNum,\r\n        },\r\n    };\r\n}\r\n\r\nfunction requestCharactersSuccess(data, pageNum) {\r\n    return {\r\n        type: REQUEST_CHARACTERS_SUCCESS,\r\n        payload: {\r\n            pageNum,\r\n            data: data.results,\r\n            count: data.count,\r\n        },\r\n    };\r\n}\r\n\r\nfunction requestCharactersError(error, pageNum) {\r\n    return {\r\n        type: REQUEST_CHARACTERS_ERROR,\r\n        payload: {\r\n            error,\r\n            pageNum,\r\n        },\r\n    };\r\n}\r\n\r\nfunction fetchCharacters(pageNum) {\r\n    return (dispatch) => {\r\n        dispatch(requestCharacters(pageNum));\r\n        const pathNumber = !pageNum ? '' : `?page=${pageNum}`;\r\n        return httpService.get(`people/${pathNumber}`)\r\n            .then((response) => (\r\n                dispatch(requestCharactersSuccess(response.data, pageNum))\r\n            ))\r\n            .catch((error) => dispatch(requestCharactersError(error)));\r\n    };\r\n}\r\n\r\nfunction shouldFetchCharacters(state, pageNum) {\r\n    const page = state.characters.dataByPage[pageNum];\r\n    const length = page && page.data.length;\r\n    const loading = page && page.loading;\r\n\r\n    if (length || loading) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function fetchCharactersIfNeeded(pageNum) {\r\n    return (dispatch, getState) => {\r\n        if (shouldFetchCharacters(getState(), pageNum)) {\r\n            return dispatch(fetchCharacters(pageNum));\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function setCharactersPage(pageNum) {\r\n    return {\r\n        type: SET_CHRACTERS_PAGE,\r\n        payload: pageNum,\r\n    };\r\n}\r\n","export const selectCharactersPageData = (state, pageNum) => {\r\n    if (state.dataByPage[pageNum]) {\r\n        return {\r\n            ...state.dataByPage[pageNum],\r\n        };\r\n    }\r\n    return {\r\n        data: [],\r\n    };\r\n};\r\n\r\nexport const selectCharacterDataById = (state, id) => {\r\n    if (state.dataById[id]) {\r\n        return {\r\n            ...state.dataById[id],\r\n        };\r\n    }\r\n    return {\r\n        data: [],\r\n    };\r\n};\r\n\r\nexport const selectFilmDataById = (state, id) => {\r\n    if (state.dataById[id]) {\r\n        return {\r\n            ...state.dataById[id],\r\n        };\r\n    }\r\n    return {\r\n        data: [],\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { User } from 'react-feather';\r\nimport './character-card.scss';\r\n\r\nconst getHrefId = (href) => href.split('/').filter((v) => v).pop();\r\n\r\nconst CharacterCard = (props) => {\r\n    const { data } = props;\r\n    const path = `/characters/${getHrefId(data.url)}`;\r\n    return (\r\n        <Link to={path} className='card card--character'>\r\n            <div className='card-body--character'>\r\n                <User className='icon-user' size={40} />\r\n                <h4 className='card-chatacter-title js-character-name'>{data.name}</h4>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'react-feather';\r\nimport {\r\n    setCharactersPage as setCharactersPageAction,\r\n    fetchCharactersIfNeeded as fetchCharactersIfNeededAction,\r\n} from 'actions/characters';\r\nimport { selectCharactersPageData } from 'selectors';\r\nimport CharacterCard from 'components/character-card';\r\nimport Swiper from 'components/swiper';\r\n\r\nconst CHARACTERS_PAGE_NUM = 1;\r\n\r\nclass CharactersSwiper extends Component {\r\n    componentDidMount() {\r\n        const { setCharactersPage, fetchCharactersIfNeeded } = this.props;\r\n        setCharactersPage(CHARACTERS_PAGE_NUM);\r\n        fetchCharactersIfNeeded(CHARACTERS_PAGE_NUM);\r\n    }\r\n\r\n    render() {\r\n        const { data, loading, error } = this.props;\r\n        const children = data.map((character) => (\r\n            <div key={character.name}>\r\n                <CharacterCard data={character} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div className='characters-swiper'>\r\n                <div className='title'>Characters</div>\r\n                {error && <p>Failed to load characters data</p>}\r\n                <div>\r\n                    {\r\n                        loading\r\n                            ? <Loader className='icon-loading' size={30} />\r\n                            : <Swiper>{children}</Swiper>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ characters }) => ({\r\n    ...selectCharactersPageData(characters, characters.currentPage),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchCharactersIfNeeded: setCharactersPageAction,\r\n    setCharactersPage: fetchCharactersIfNeededAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharactersSwiper);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FilmsSwiper from 'components/films-swiper';\r\nimport CharactersSwiper from 'components/characters-swiper';\r\nimport r2d2 from 'img/r2d2.svg';\r\nimport bb8 from 'img/bb8.svg';\r\nimport './home.scss';\r\n\r\nconst Home = () => (\r\n    <div className='home wrapper'>\r\n        <div className='characters-pictures'>\r\n            <Link className='characters-pictures__item' to='characters/3'>\r\n                <img className='icon-r2d2' src={r2d2} alt='' />\r\n            </Link>\r\n            <Link className='characters-pictures__item' to='characters/87'>\r\n                <img className='icon-bb8' src={bb8} alt='' />\r\n            </Link>\r\n        </div>\r\n        <FilmsSwiper />\r\n        <CharactersSwiper />\r\n    </div>\r\n\r\n);\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sorter extends Component {\r\n    selectHandler(e) {\r\n        const { sort } = this.props;\r\n        sort(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='block-right'>\r\n                <select\r\n                    className='sorter'\r\n                    onChange={(e) => {\r\n                        this.selectHandler(e);\r\n                    }}\r\n                >\r\n                    <option className='option'>Number of episode</option>\r\n                    <option className='option'>Date of reliase</option>\r\n                </select>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sorter;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'react-feather';\r\nimport { fetchFilmsIfNeeded as fetchFilmsIfNeededIfNeededAction } from 'actions/films';\r\nimport FilmCard from 'components/film-card';\r\nimport Sorter from './sorter';\r\n\r\nconst compareReleaseDate = (film1, film2) => {\r\n    const date1 = new Date(film1.release_date);\r\n    const date2 = new Date(film2.release_date);\r\n\r\n    return date1 - date2;\r\n};\r\n\r\nconst compareNumberOfEpisode = (film1, film2) => film1.episode_id - film2.episode_id;\r\n\r\nclass Films extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sortBy: 'Number of episode',\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { fetchFilmsIfNeeded } = this.props;\r\n        fetchFilmsIfNeeded();\r\n    }\r\n\r\n    sorterHandler = (sortBy) => {\r\n        this.setState({ sortBy });\r\n    }\r\n\r\n    sortData = (data, sortBy) => {\r\n        if (sortBy === 'Number of episode') {\r\n            return data.sort(compareNumberOfEpisode);\r\n        }\r\n        return data.sort(compareReleaseDate);\r\n    }\r\n\r\n    render() {\r\n        const { data, loading, error } = this.props;\r\n        const { sortBy } = this.state;\r\n        const sortedData = this.sortData(data, sortBy);\r\n        return (\r\n            <div className='wrapper'>\r\n                <div className='title'>Films</div>\r\n                <Sorter sort={this.sorterHandler} />\r\n                <hr className='separator' noshade='true' />\r\n                {error && <p>Failed to load film data</p>}\r\n                {\r\n                    loading\r\n                        ? <Loader className='icon-loading' size={30} />\r\n                        : (\r\n                            <ul className='grid'>\r\n                                {sortedData.map((film) => (\r\n                                    <li className='grid__item' key={film.episode_id}>\r\n                                        <FilmCard data={film} />\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ...state.films,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchFilmsIfNeeded: fetchFilmsIfNeededIfNeededAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Films);\r\n","import httpService from 'services';\r\n\r\nexport const REQUEST_CHARACTER = 'REQUEST_CHARACTER';\r\nexport const REQUEST_CHARACTER_SUCCESS = 'REQUEST_CHARACTER_SUCCESS';\r\nexport const REQUEST_CHARACTER_ERROR = 'REQUEST_CHARACTER_ERROR';\r\n\r\nfunction requestCharacter(characterId) {\r\n    return {\r\n        type: REQUEST_CHARACTER,\r\n        payload: {\r\n            characterId,\r\n        },\r\n    };\r\n}\r\n\r\nfunction requestCharacterSuccess(characterId, data) {\r\n    return {\r\n        type: REQUEST_CHARACTER_SUCCESS,\r\n        payload: {\r\n            characterId,\r\n            data,\r\n        },\r\n    };\r\n}\r\n\r\nfunction requestCharacterError(characterId, error) {\r\n    return {\r\n        type: REQUEST_CHARACTER_ERROR,\r\n        payload: {\r\n            characterId,\r\n            error,\r\n        },\r\n    };\r\n}\r\n\r\nfunction fetchCharacter(characterId) {\r\n    return (dispatch) => {\r\n        dispatch(requestCharacter(characterId));\r\n        return httpService.get(`people/${characterId}`)\r\n            .then((response) => dispatch(\r\n                requestCharacterSuccess(characterId, response.data),\r\n            ))\r\n            .catch((error) => dispatch(requestCharacterError(characterId, error)));\r\n    };\r\n}\r\n\r\nfunction shouldFetchCharacter(state, characterId) {\r\n    const character = state.character.dataById[characterId];\r\n    const length = character && character.data;\r\n    const loading = character && character.loading;\r\n\r\n    if (length || loading) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function fetchCharacterIfNeeded(characterId) {\r\n    return (dispatch, getState) => {\r\n        if (shouldFetchCharacter(getState(), characterId)) {\r\n            return dispatch(fetchCharacter(characterId));\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import { fetchCharacterIfNeeded } from 'actions/character';\r\nimport httpService from 'services';\r\n\r\nexport const REQUEST_FILM = 'REQUEST_FILM';\r\nexport const REQUEST_FILM_SUCCESS = 'REQUEST_FILM_SUCCESS';\r\nexport const REQUEST_FILM_ERROR = 'REQUEST_FILM_ERROR';\r\nexport const REQUEST_FILM_CHARACTERS = 'REQUEST_FILM_CHARACTERS';\r\nexport const REQUEST_FILM_CHARACTERS_SUCCESS = 'REQUEST_FILM_CHARACTERS_SUCCESS';\r\nexport const REQUEST_FILM_CHARACTERS_ERROR = 'REQUEST_FILM_CHARACTERS_ERROR';\r\n\r\nconst getHrefId = (href) => href.split('/').filter((v) => v).pop();\r\n\r\nfunction requestFilm(filmId) {\r\n    return {\r\n        type: REQUEST_FILM,\r\n        payload: {\r\n            filmId,\r\n        },\r\n    };\r\n}\r\n\r\nfunction requestFilmSuccess(filmId, data) {\r\n    return {\r\n        type: REQUEST_FILM_SUCCESS,\r\n        payload: {\r\n            filmId,\r\n            data,\r\n        },\r\n    };\r\n}\r\n\r\nfunction requestFilmError(filmId, error) {\r\n    return {\r\n        type: REQUEST_FILM_ERROR,\r\n        payload: {\r\n            filmId,\r\n            error,\r\n        },\r\n    };\r\n}\r\n\r\nfunction requestFilmCharacters(filmId) {\r\n    return {\r\n        type: REQUEST_FILM_CHARACTERS,\r\n        payload: { filmId },\r\n    };\r\n}\r\n\r\nfunction requestFilmCharactersSuccess(filmId) {\r\n    return {\r\n        type: REQUEST_FILM_CHARACTERS_SUCCESS,\r\n        payload: { filmId },\r\n    };\r\n}\r\n\r\nfunction requestFilmCharactersError(filmId, error) {\r\n    return {\r\n        type: REQUEST_FILM_CHARACTERS_ERROR,\r\n        payload: { filmId, error },\r\n    };\r\n}\r\n\r\nfunction fetchFilmCharacters(filmId, characterIds) {\r\n    return (dispatch, getState) => {\r\n        dispatch(requestFilmCharacters(filmId));\r\n\r\n        const characterRequests = characterIds.map(\r\n            (id) => fetchCharacterIfNeeded(id)(dispatch, getState),\r\n        );\r\n\r\n        return Promise.all(characterRequests)\r\n            .then((data) => {\r\n                data.forEach((action) => action && dispatch(action));\r\n                dispatch(requestFilmCharactersSuccess(filmId));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(requestFilmCharactersError(filmId, error));\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchFilm(filmId) {\r\n    return (dispatch) => {\r\n        dispatch(requestFilm(filmId));\r\n        return httpService.get(`films/${filmId}/`)\r\n            .then((response) => {\r\n                const characterIds = response.data.characters.map(\r\n                    (character) => getHrefId(character),\r\n                );\r\n                dispatch(requestFilmSuccess(\r\n                    filmId,\r\n                    response.data,\r\n                    response.data.characters = characterIds,\r\n                ));\r\n                dispatch(fetchFilmCharacters(filmId, characterIds));\r\n            })\r\n            .catch((error) => dispatch(requestFilmError(filmId, error)));\r\n    };\r\n}\r\n\r\nfunction shouldFetchFilm(state, filmId) {\r\n    const film = state.film.dataById[filmId];\r\n    const length = film && film.data;\r\n    const loading = film && film.loading;\r\n\r\n    if (length || loading) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function fetchFilmIfNeeded(characterId) {\r\n    return (dispatch, getState) => {\r\n        if (shouldFetchFilm(getState(), characterId)) {\r\n            return dispatch(fetchFilm(characterId));\r\n        }\r\n        return null;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { selectCharacterDataById } from 'selectors';\r\n\r\nconst CharacterLink = (props) => {\r\n    const { id, data } = props;\r\n    const path = `/characters/${id}`;\r\n    return (\r\n        <Link to={path} className='link link--character'>{data.name}</Link>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ character }, { id }) => ({\r\n    ...selectCharacterDataById(character, id),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CharacterLink);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchFilmIfNeeded } from 'actions/film';\r\nimport { selectFilmDataById } from 'selectors';\r\nimport { Loader } from 'react-feather';\r\nimport CharacterLink from './characterLink';\r\nimport './film.scss';\r\n\r\nclass Film extends Component {\r\n    componentDidMount() {\r\n        const { match: { params: { id } } } = this.props;\r\n        fetchFilmIfNeeded(id);\r\n    }\r\n\r\n    renderError() {\r\n        const { error } = this.props;\r\n        if (error) {\r\n            return <p>Failed to load film data</p>;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderCharacterError() {\r\n        const { charactersError } = this.props;\r\n        if (charactersError) {\r\n            return <p>Failed to load film data</p>;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderFilm() {\r\n        const { data, data: { characters }, loadingCharacters } = this.props;\r\n\r\n        return (\r\n            <div className='film wrapper'>\r\n                <h4 className='film-title'>\r\n                    Episode\r\n                    <span className='film-episode'>{data.episode_id}</span>\r\n                    :\r\n                    <span className='film-name uppercase'>{data.title}</span>\r\n                </h4>\r\n                <div className='grid-20-80'>\r\n                    <div className='grid-20-80__item'>Director:</div>\r\n                    <div className='grid-20-80__item'>{data.director}</div>\r\n                    <div className='grid-20-80__item'>Produser:</div>\r\n                    <div className='grid-20-80__item'>{data.producer}</div>\r\n                    <div className='grid-20-80__item'>Date of reliase:</div>\r\n                    <div className='grid-20-80__item'>{data.release_date}</div>\r\n                    <div className='grid-20-80__item'>Characters:</div>\r\n                    <ul className='grid-20-80__item film__characters'>\r\n                        {this.renderCharacterError()}\r\n                        {\r\n                            loadingCharacters\r\n                                ? <Loader className='icon-loading' font={20} />\r\n                                : characters && characters.map((character) => (\r\n                                    <li key={character}>\r\n                                        <CharacterLink id={character} />\r\n                                    </li>\r\n                                ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className='stage'>\r\n                    <div className='stage-perspective'>\r\n                        <div className='stage-crawl-text'>{data.opening_crawl}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.props;\r\n        return (\r\n            <div>\r\n                {this.renderError()}\r\n                {loading\r\n                    ? <Loader className='icon-loading' font={20} />\r\n                    : this.renderFilm()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ film }, { match: { params: { id } } }) => ({\r\n    id,\r\n    ...selectFilmDataById(film, id),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchFilmIfNeeded,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Film);\r\n","import React, { Component } from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'react-feather';\r\n\r\nclass Pagination extends Component {\r\n    btnHandler = (numb) => {\r\n        const {\r\n            onPagination,\r\n            currentPage,\r\n        } = this.props;\r\n\r\n        const pageNum = currentPage + numb;\r\n        onPagination(pageNum);\r\n    }\r\n\r\n    render() {\r\n        const { currentPage, pageCount } = this.props;\r\n        return (\r\n            <div className='pagination'>\r\n                <button\r\n                    type='button'\r\n                    className='pagination__item'\r\n                    disabled={currentPage <= 1}\r\n                    onClick={() => {\r\n                        this.btnHandler(-1);\r\n                    }}\r\n                >\r\n                    <ChevronLeft />\r\n                    Previous\r\n                </button>\r\n                <button\r\n                    type='button'\r\n                    className='pagination__item'\r\n                    disabled={currentPage >= pageCount / 10}\r\n                    onClick={() => {\r\n                        this.btnHandler(1);\r\n                    }}\r\n                >\r\n                    Next\r\n                    <ChevronRight />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'react-feather';\r\nimport queryString from 'query-string';\r\nimport {\r\n    setCharactersPage as setCharactersPageAction,\r\n    fetchCharactersIfNeeded as fetchCharactersIfNeededAction,\r\n} from 'actions/characters';\r\nimport { selectCharactersPageData } from 'selectors';\r\nimport CharacterCard from 'components/character-card';\r\nimport Pagination from './pagination';\r\n\r\nclass Characters extends Component {\r\n    componentDidMount = () => {\r\n        const { setCharactersPage, fetchCharactersIfNeeded } = this.props;\r\n        const {\r\n            currentPage, location: { search },\r\n        } = this.props;\r\n        const pageFromQuery = queryString.parse(search).page;\r\n        const pageNum = pageFromQuery != null ? parseInt(pageFromQuery, 10) : currentPage;\r\n\r\n        setCharactersPage(pageNum);\r\n        fetchCharactersIfNeeded(pageNum);\r\n    }\r\n\r\n    onPagination = (pageNum) => {\r\n        const { setCharactersPage, fetchCharactersIfNeeded } = this.props;\r\n        this.setCurrentPageInHistory(pageNum);\r\n        setCharactersPage(pageNum);\r\n        fetchCharactersIfNeeded(pageNum);\r\n    }\r\n\r\n    setCurrentPageInHistory = (pageNum) => {\r\n        const { history, location: { pathname } } = this.props;\r\n\r\n        history.push({\r\n            pathname,\r\n            search: `?page=${pageNum}`,\r\n        });\r\n    }\r\n\r\n    renderError = () => {\r\n        const { error } = this.props;\r\n\r\n        if (error) {\r\n            return <p>Failed to load film data</p>;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderPagination = () => {\r\n        const { currentPage, count } = this.props;\r\n\r\n        return (\r\n            <div className='wrapper'>\r\n                <Pagination\r\n                    currentPage={currentPage}\r\n                    pageCount={count}\r\n                    onPagination={this.onPagination}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { data, loading } = this.props;\r\n\r\n        return (\r\n            <div className='wrapper'>\r\n                <div className='title'>Characters</div>\r\n                {this.renderError()}\r\n                {this.renderPagination()}\r\n                <hr className='separator' noshade='true' />\r\n                {\r\n                    loading\r\n                        ? <Loader className='icon-loading' size={30} />\r\n                        : (\r\n                            <ul className='grid'>\r\n                                {data.map(((character) => (\r\n                                    <li className='grid__item' key={character.name}>\r\n                                        <CharacterCard data={character} />\r\n                                    </li>\r\n                                )))}\r\n                            </ul>\r\n                        )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ characters }) => ({\r\n    count: characters.count,\r\n    currentPage: characters.currentPage,\r\n    ...selectCharactersPageData(characters, characters.currentPage),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchCharactersIfNeeded: setCharactersPageAction,\r\n    setCharactersPage: fetchCharactersIfNeededAction,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Characters);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchCharacterIfNeeded } from 'actions/character';\r\nimport { selectCharacterDataById } from 'selectors';\r\nimport { Loader, User } from 'react-feather';\r\n\r\nclass Character extends Component {\r\n    componentDidMount = () => {\r\n        const { match: { params: { id } } } = this.props;\r\n        fetchCharacterIfNeeded(id);\r\n    }\r\n\r\n    renderError = () => {\r\n        const { error } = this.props;\r\n        if (error) {\r\n            return <p>Failed to load character data</p>;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderCharacter = () => {\r\n        const { data } = this.props;\r\n        return (\r\n            <div className='grid-20-80 wrapper'>\r\n                <div className='grid-20-80__item grid-20-80__item-title'>\r\n                    <User className='icon-user' size={80} />\r\n                </div>\r\n                <div className='grid-20-80__item'>Name:</div>\r\n                <div className='grid-20-80__item'>{data.name}</div>\r\n                <div className='grid-20-80__item'>Gender:</div>\r\n                <div className='grid-20-80__item'>{data.gender}</div>\r\n                <div className='grid-20-80__item'>Birthday:</div>\r\n                <div className='grid-20-80__item'>{data.birth_year}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.props;\r\n        return (\r\n            <div>\r\n                {this.renderError()}\r\n                {loading\r\n                    ? <Loader className='icon-loading' size={20} />\r\n                    : this.renderCharacter()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ character }, { match: { params: { id } } }) => ({\r\n    id,\r\n    ...selectCharacterDataById(character, id),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchCharacterIfNeeded,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Character);\r\n","import React from 'react';\r\nimport Header from 'components/header';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from 'components/home';\r\nimport Films from 'components/films';\r\nimport Film from 'components/film';\r\nimport Characters from 'components/characters';\r\nimport Character from 'components/character';\r\n\r\nimport './app.scss';\r\nimport 'styles/card.scss';\r\nimport 'styles/buttons.scss';\r\nimport 'styles/base.scss';\r\n\r\nconst App = () => (\r\n    <div className='app'>\r\n        <Header />\r\n        <main>\r\n            <Switch>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/films' component={Films} />\r\n                <Route path='/films/:id' component={Film} />\r\n                <Route exact path='/characters' component={Characters} />\r\n                <Route path='/characters/:id' component={Character} />\r\n            </Switch>\r\n        </main>\r\n    </div>\r\n);\r\n\r\nexport default App;\r\n","import {\r\n    REQUEST_FILMS,\r\n    REQUEST_FILMS_SUCCESS,\r\n    REQUEST_FILMS_ERROR,\r\n} from 'actions/films';\r\n\r\nfunction films(state = {\r\n    loading: false,\r\n    data: [],\r\n    error: null,\r\n}, action) {\r\n    switch (action.type) {\r\n        case REQUEST_FILMS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case REQUEST_FILMS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                data: action.payload,\r\n            };\r\n        case REQUEST_FILMS_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload,\r\n                data: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default films;\r\n","import {\r\n    REQUEST_FILM,\r\n    REQUEST_FILM_SUCCESS,\r\n    REQUEST_FILM_ERROR,\r\n    REQUEST_FILM_CHARACTERS,\r\n    REQUEST_FILM_CHARACTERS_SUCCESS,\r\n    REQUEST_FILM_CHARACTERS_ERROR,\r\n} from 'actions/film';\r\n\r\nfunction film(state = {\r\n    dataById: {},\r\n}, { type, payload = {} }) {\r\n    switch (type) {\r\n        case REQUEST_FILM:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.filmId]: {\r\n                        error: null,\r\n                        loading: true,\r\n                        data: [],\r\n                        loadingCharacters: false,\r\n                        charactersError: null,\r\n                    },\r\n                },\r\n            };\r\n        case REQUEST_FILM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.filmId]: {\r\n                        ...state.dataById[payload.filmId],\r\n                        error: null,\r\n                        loading: false,\r\n                        data: payload.data,\r\n                    },\r\n                },\r\n            };\r\n        case REQUEST_FILM_ERROR:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.filmId]: {\r\n                        ...state.dataById[payload.filmId],\r\n                        error: payload,\r\n                        loading: false,\r\n                        data: [],\r\n                    },\r\n                },\r\n            };\r\n        case REQUEST_FILM_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.filmId]: {\r\n                        ...state.dataById[payload.filmId],\r\n                        loadingCharacters: true,\r\n                    },\r\n                },\r\n            };\r\n        case REQUEST_FILM_CHARACTERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.filmId]: {\r\n                        ...state.dataById[payload.filmId],\r\n                        loadingCharacters: false,\r\n                    },\r\n                },\r\n            };\r\n        case REQUEST_FILM_CHARACTERS_ERROR:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.filmId]: {\r\n                        ...state.dataById[payload.filmId],\r\n                        loadingCharacters: false,\r\n                        charactersError: payload.error,\r\n                    },\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default film;\r\n","import {\r\n    SET_CHRACTERS_PAGE,\r\n    REQUEST_CHARACTERS,\r\n    REQUEST_CHARACTERS_SUCCESS,\r\n    REQUEST_CHARACTERS_ERROR,\r\n} from 'actions/characters';\r\n\r\nfunction characters(state = {\r\n    currentPage: 1,\r\n    dataByPage: {},\r\n    count: null,\r\n}, { type, payload = {} }) {\r\n    switch (type) {\r\n        case SET_CHRACTERS_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: payload,\r\n            };\r\n        case REQUEST_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                dataByPage: {\r\n                    ...state.dataByPage,\r\n                    [payload.pageNum]: {\r\n                        error: null,\r\n                        loading: true,\r\n                        data: [],\r\n                    },\r\n                },\r\n            };\r\n        case REQUEST_CHARACTERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataByPage: {\r\n                    ...state.dataByPage,\r\n                    [payload.pageNum]: {\r\n                        error: null,\r\n                        loading: false,\r\n                        data: payload.data,\r\n                    },\r\n                },\r\n                count: payload.count,\r\n            };\r\n        case REQUEST_CHARACTERS_ERROR:\r\n            return {\r\n                ...state,\r\n                dataByPage: {\r\n                    ...state.dataByPage,\r\n                    [payload.pageNum]: {\r\n                        error: payload,\r\n                        loading: false,\r\n                        data: [],\r\n                    },\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default characters;\r\n","import {\r\n    REQUEST_CHARACTER,\r\n    REQUEST_CHARACTER_SUCCESS,\r\n    REQUEST_CHARACTER_ERROR,\r\n} from 'actions/character';\r\n\r\nfunction character(state = {\r\n    dataById: {},\r\n}, { type, payload = {} }) {\r\n    switch (type) {\r\n        case REQUEST_CHARACTER:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.characterId]: {\r\n                        error: null,\r\n                        loading: true,\r\n                        data: [],\r\n                    },\r\n                },\r\n            };\r\n        case REQUEST_CHARACTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.characterId]: {\r\n                        error: null,\r\n                        loading: false,\r\n                        data: payload.data,\r\n                    },\r\n                },\r\n            };\r\n        case REQUEST_CHARACTER_ERROR:\r\n            return {\r\n                ...state,\r\n                dataById: {\r\n                    ...state.dataById,\r\n                    [payload.characterId]: {\r\n                        error: payload,\r\n                        loading: false,\r\n                        data: [],\r\n                    },\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default character;\r\n","import { combineReducers } from 'redux';\r\nimport films from './films';\r\nimport film from './film';\r\nimport characters from './characters';\r\nimport character from './character';\r\n\r\nconst rootReducer = combineReducers({\r\n    films,\r\n    film,\r\n    characters,\r\n    character,\r\n});\r\n\r\nexport default rootReducer;\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from 'components/app';\r\nimport configureStore from './configureStore';\r\nimport './index.css';\r\n\r\nconst store = configureStore();\r\n\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from 'reducers';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        composeWithDevTools(applyMiddleware(thunk)),\r\n    );\r\n}\r\n"],"sourceRoot":""}